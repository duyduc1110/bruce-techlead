version: '3.8'

services:
  gateway-service:
    build:
      context: ./src/gateway
      dockerfile: Dockerfile.dev
    container_name: gateway-service
    ports:
      - "${GATEWAY_EXTERNAL_PORT}:80"
    volumes:
      - ./src/gateway/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - feedback-service
      - member-service
      - organization-service
    networks:
      - microservices-network

  feedback-service:
    build:
      context: ./src/services/feedback
      dockerfile: Dockerfile.dev
    container_name: feedback-service
    volumes:
      - ./src/services/feedback:/app
    environment:
      - DATABASE_URL=postgresql://${FEEDBACK_POSTGRES_USER}:${FEEDBACK_POSTGRES_PASSWORD}@${FEEDBACK_DB_HOST}:${FEEDBACK_POSTGRES_PORT}/${FEEDBACK_POSTGRES_DB}
      - ORGANIZATION_SERVICE_URL=${ORGANIZATION_SERVICE_URL}
    env_file:
      - .env
    depends_on:
      - feedback-db
      - organization-service
    networks:
      - microservices-network

  feedback-db:
    image: postgres:13
    container_name: feedback-db
    environment:
      - POSTGRES_USER=${FEEDBACK_POSTGRES_USER}
      - POSTGRES_PASSWORD=${FEEDBACK_POSTGRES_PASSWORD}
      - POSTGRES_DB=${FEEDBACK_POSTGRES_DB}
    env_file:
      - .env
    # volumes:
    #   - feedback-db-data:/var/lib/postgresql/data
    networks:
      - microservices-network

  member-service:
    build:
      context: ./src/services/member
      dockerfile: Dockerfile.dev
    container_name: member-service
    volumes:
      - ./src/services/member:/app
    environment:
      - DATABASE_URL=postgresql://${MEMBER_POSTGRES_USER}:${MEMBER_POSTGRES_PASSWORD}@${MEMBER_DB_HOST}:${MEMBER_POSTGRES_PORT}/${MEMBER_POSTGRES_DB}
      - ORGANIZATION_SERVICE_URL=${ORGANIZATION_SERVICE_URL}
    env_file:
      - .env
    depends_on:
      - member-db
      - organization-service
    networks:
      - microservices-network

  member-db:
    image: postgres:13
    container_name: member-db
    environment:
      - POSTGRES_USER=${MEMBER_POSTGRES_USER}
      - POSTGRES_PASSWORD=${MEMBER_POSTGRES_PASSWORD}
      - POSTGRES_DB=${MEMBER_POSTGRES_DB}
    env_file:
      - .env
    # volumes:
    #   - member-db-data:/var/lib/postgresql/data
    networks:
      - microservices-network

  organization-service:
    build:
      context: ./src/services/organization
      dockerfile: Dockerfile.dev
    container_name: organization-service
    environment:
      - ORGANIZATION_SERVICE_PORT=${ORGANIZATION_SERVICE_PORT}
    env_file:
      - .env
    volumes:
      - ./src/services/organization/app:/app
      - ./src/services/organization/dummy.json:/app/dummy.json
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

# volumes:
#   feedback-db-data:
#   member-db-data: