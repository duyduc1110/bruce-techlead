worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    server {
        listen 80;
        
        location = / {
            return 200 '{"status":"healthy","service":"api-gateway"}';
            add_header Content-Type application/json;
        }
        
        # Feedback service routes
        location ~ ^/api/v1/organizations/[^/]+/feedbacks {
            proxy_pass http://feedback-service:18001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # Organization service routes
        location ~ ^/api/v1/organizations {
            proxy_pass http://organization-service:18000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # Direct links to service docs
        location = /organization-docs {
            # Handle Swagger UI properly
            proxy_pass http://organization-service:18000/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            sub_filter_once off;
            sub_filter_types *;
        }

        location = /organization-openapi.json {
            # Serve the OpenAPI spec directly
            proxy_pass http://organization-service:18000/organization-openapi.json;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location ~ ^/organization-docs/(.*)$ {
            # Handle other Swagger UI static assets
            proxy_pass http://organization-service:18000/docs/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location = /feedback-docs {
            # Handle Swagger UI properly
            proxy_pass http://feedback-service:18001/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            sub_filter_once off;
            sub_filter_types *;
        }

        location = /feedback-openapi.json {
            # Serve the OpenAPI spec directly
            proxy_pass http://feedback-service:18001/feedback-openapi.json;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location ~ ^/feedback-docs/(.*)$ {
            # Handle other Swagger UI static assets
            proxy_pass http://feedback-service:18001/docs/$1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # API Documentation selector page
        location = /api-docs {
            add_header Content-Type text/html;
            return 200 '
            <!DOCTYPE html>
            <html>
            <head>
                <title>API Documentation</title>
                <meta charset="utf-8"/>
                <style>
                    body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }
                    .service-link { display: block; margin: 20px 0; padding: 15px; background: #f8f8f8; 
                                border: 1px solid #ddd; border-radius: 5px; text-decoration: none; color: #333; }
                    .service-link:hover { background: #f0f0f0; }
                    h1 { color: #333; }
                </style>
            </head>
            <body>
                <h1>API Documentation</h1>
                <p>Select a service to view its documentation:</p>
                <a class="service-link" href="/organization-docs">Organization Service API Documentation</a>
                <a class="service-link" href="/feedback-docs">Feedback Service API Documentation</a>
            </body>
            </html>
            ';
        }
        
        # Handle all other routes
        location / {
            return 404 '{"detail":"Not Found"}';
            add_header Content-Type application/json;
        }
    }
}